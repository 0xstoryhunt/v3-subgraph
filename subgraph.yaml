specVersion: 0.0.4
description: StoryHunt - first IPFi Story Native AMM DEX to trade Tokens, NFTs and IPs. Anything and Everything.
repository: https://github.com/0xstoryhunt/v3-subgraph.git
schema:
  file: ./schema.graphql
features:
  - nonFatalErrors
  - grafting
dataSources:
  
  - kind: ethereum/contract
    name: Factory
    network: story
    source:
      abi: Factory
      address: '0x305936Fb6EBE41e9b6815067ca357cAEf397c1e8'
      startBlock: 50000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: Pool
          file: ./abis/pool.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,indexed uint24,int24,address)
          handler: handlePoolCreated

  - kind: ethereum/contract
    name: NonfungiblePositionManager
    network: story
    source:
      address: '0xc4965a978a909Ec458559f38e64BC7b1E060407d' # Add the contract address
      abi: NonfungiblePositionManager
      startBlock: 50000 # Add the start block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/position-manager.ts
      entities:
        - Pool
        - Token
        - Position # Include the Position entity
      abis:
        - name: NonfungiblePositionManager
          file: ./abis/NonfungiblePositionManager.json
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Collect(indexed uint256,address,uint256,uint256)
          handler: handleCollect
        - event: DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleDecreaseLiquidity
        - event: IncreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleIncreaseLiquidity
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer

  - kind: ethereum/contract
    name: OldAlphaHunterV3
    network: story
    source:
      address: '0x057bBe3A093Ce00113E90EE635c247a034011762'
      abi: OldAlphaHunterV3
      startBlock: 50000 # Replace with the correct start block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/lm/oldalphahunter.ts
      entities:
        - LMPool
        - LMTransaction
      abis:
        - name: OldAlphaHunterV3
          file: ./abis/OldAlphaHunterV3.json
      eventHandlers:
        - event: AddPool(indexed uint256,uint256,indexed address,indexed address)
          handler: handleAddPool
        - event: Deposit(indexed address,indexed uint256,indexed uint256,uint256,int24,int24)
          handler: handleDeposit
        - event: Harvest(indexed address,address,address,indexed uint256,indexed uint256,uint256)
          handler: handleHarvest
        - event: NewUpkeepPeriod(indexed address,indexed uint256,uint256,uint256,uint256,uint256)
          handler: handleNewUpkeepPeriod
        - event: SetPool(indexed uint256,uint256)
          handler: handleSetPool
        - event: UpdateLiquidity(indexed address,indexed uint256,indexed uint256,int128,int24,int24)
          handler: handleUpdateLiquidity
        - event: UpdateUpkeepPeriod(indexed address,indexed uint256,uint256,uint256,uint256)
          handler: handleUpdateUpkeepPeriod
        - event: Withdraw(indexed address,address,indexed uint256,indexed uint256)
          handler: handleWithdraw
        - event: NewPeriodDuration(uint256)
          handler: handleNewPeriodDuration

  - kind: ethereum/contract
    name: AlphaHunterV3
    network: story
    source:
      address: '0x2152d2e4954474Cb351b89Fa9BcC8De93d531cBf'  # Replace with the new contract address
      abi: AlphaHunter
      startBlock: 1000000  # Replace with the correct start block for the new contract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/lm/alphahunter.ts  # Adjust file path if needed
      entities:
        - LMPool
        - LMTransaction
      abis:
        - name: AlphaHunter
          file: ./abis/AlphaHunter.json
      eventHandlers:
        - event: AddPool(indexed uint256,uint256,indexed address,indexed address)
          handler: handleAddPool
        - event: Deposit(indexed address,indexed uint256,indexed uint256,uint256,int24,int24)
          handler: handleDeposit
        - event: Harvest(indexed address,address,indexed uint256,indexed uint256,uint256)
          handler: handleHarvest
        - event: NewUpkeepPeriod(indexed uint256,uint256,uint256,uint256,uint256)
          handler: handleNewUpkeepPeriod
        - event: SetPool(indexed uint256,uint256)
          handler: handleSetPool
        - event: UpdateLiquidity(indexed address,indexed uint256,indexed uint256,int128,int24,int24)
          handler: handleUpdateLiquidity
        - event: UpdateUpkeepPeriod(indexed uint256,uint256,uint256,uint256)
          handler: handleUpdateUpkeepPeriod
        - event: Withdraw(indexed address,address,indexed uint256,indexed uint256)
          handler: handleWithdraw
        - event: NewPeriodDuration(uint256)
          handler: handleNewPeriodDuration

templates:
  - kind: ethereum/contract
    name: Pool
    network: story
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/pool/index.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
        - event: Mint(address,indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleBurn
        - event: Collect(indexed address,address,indexed int24,indexed int24,uint128,uint128)
          handler: handleCollect

